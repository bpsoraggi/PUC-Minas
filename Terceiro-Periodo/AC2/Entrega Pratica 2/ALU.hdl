/**
 * A ULA (Unidade Lógica e Artimética).
 * Calcula uma das seguintes funções:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y em duas entradas de 16 bits,
 * de acordo com 6 bits de entrada denotados por zx,nx,zy,ny,f,no.
 * Além disso, a ULA calcula duas saídas de 1-bit:
 * se a saída da ULA == 0, zr é setado para 1; caso contrário zr é setado para 0;
 * se a saída da ULA < 0, ng é setado para 1; caso contrário ng é setado para 0.
 */

CHIP ALU {
    IN
        x[16], y[16], zx, nx, zy, ny, f, no;

    OUT
        out[16], zr, ng;

    PARTS:
   // Implemente aqui:
   Mux16(a=x, b=0, sel=zx, out=X1);
   Mux16(a=X1, b=Not(in=X1, out=notX1), sel=nx, out=XP);
   Mux16(a=y, b=0, sel=zy, out=Y1);
   Mux16(a=Y1, b=Not(in=Y1, out=notY1), sel=ny, out=YP);
   Mux16(a=Add16(a=XP, b=YP, out= outAdd16), b=And16(a=XP, b=YP, out=outAnd), sel=f, out=outF);
   Mux16(a=outF, b=0, sel=no, out[0..7]=out1, out[8..15]=out2, out[15]=ng, out=out);
   Or8Way(in=out1, out=or1);
   Or8Way(in=out2, out=or2);
   Or(a=or1, b=or2, out=ourOr);
   Not(in=outOr, out=zr);
   }
